{
  "_from": "spatiasql",
  "_id": "spatiasql@3.0.2-beta",
  "_inBundle": false,
  "_integrity": "sha512-yZ61cNWbsheO0Il61pnhcBKvHY0gw7kmysLn3YxziY749w9fhyNDDkTs0qY5rnCKB82U0J3Vrei0PMl2FEaMhA==",
  "_location": "/spatiasql",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "spatiasql",
    "fetchSpec": "latest",
    "name": "spatiasql",
    "raw": "spatiasql",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/spatiasql/-/spatiasql-3.0.2-beta.tgz",
  "_shasum": "cc5365463b645f9c44e8b7b933de0e380e21a7f0",
  "_shrinkwrap": null,
  "_spec": "spatiasql",
  "_where": "C:\\Users\\Sean\\Desktop\\foxhole-router\\Demo",
  "author": {
    "name": "jvail"
  },
  "bugs": {
    "url": "https://github.com/jvail/spatiasql.js/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "JS (emscripten) port of SpatiaLite",
  "devDependencies": {
    "typescript": "^2.9.2"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/jvail/spatiasql.js#readme",
  "keywords": [
    "geodata",
    "spatial DBMS",
    "spatialite",
    "sqlite"
  ],
  "license": "MIT",
  "main": "dist/spatiasql.js",
  "name": "spatiasql",
  "optionalDependencies": {},
  "readme": "# spatiasql.js\n\nJavaScript (emscripten) port of [SpatiaLite 5.0.0-beta](https://www.gaia-gis.it/fossil/libspatialite/index) (including SQLite 3.24.0, proj 5.1.0, geos 3.6.2)\n\n[![Build Status](https://travis-ci.org/jvail/spatiasql.js.svg?branch=master)](https://travis-ci.org/jvail/spatiasql.js)\n\n## Demo\nA demo (WebAssembly required) is available from here: http://jvail.github.io/spatiasql.js/\n\n(be patient, loading the js and database file takes some time).\n\n## Usage\nspatiasql.js (SpatiaLite) is an extension of [sql.js](https://github.com/kripken/sql.js/) (SQLite) and implements the same (for node), but async API for the browser, exept:\n\n - loading shapefiles in node:\n```js\nconst fs = require('fs');\nconst spatiasql = require('spatiasql-node');\n\nspatiasql.then(Database => {\n\n  const db = new Database();\n\n  db.loadshp('my_table', 'CP1251', 4326, {\n    shp: fs.readFileSync('my_file.shp'),\n    shx: fs.readFileSync('my_file.shx'),\n    dbf: fs.readFileSync('my_file.dbf')\n  });\n\n  let res = db.exec('SELECT * FROM my_table');\n  console.log(res);\n\n});\n```\n\n - loading shapefiles in the browser:\n```js\nimport { Database } from 'spatiasql';\n\nconst db = new Database();\n\nconst files = await Promise.all([\n  fetch('my_file.shp').then(res => res.arrayBuffer()),\n  fetch('my_file.shx').then(res => res.arrayBuffer()),\n  fetch('my_file.dbf').then(res => res.arrayBuffer())\n]);\n\nconst loaded = await db.loadshp('my_table', 'CP1251', 4326, {\n    shp: files[0],\n    shx: files[1],\n    dbf: files[2]\n  });\n\nif (loaded) {\n  db.exec('SELECT * FROM my_table')\n    .then(res => console.log(res));\n}\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jvail/spatiasql.js.git"
  },
  "scripts": {
    "build": "tsc; DEBUG=0 make node worker",
    "build-all": "tsc; make DEBUG=0 all",
    "build-all-debug": "tsc; DEBUG=1 make all",
    "build-debug": "tsc; DEBUG=1 make node worker",
    "clean": "make clean",
    "test": "node test/test_sql_stmts.js",
    "tsc": "tsc"
  },
  "version": "3.0.2-beta"
}
