{
  "_from": "tinyqueue",
  "_id": "tinyqueue@2.0.3",
  "_inBundle": false,
  "_integrity": "sha512-ppJZNDuKGgxzkHihX8v9v9G5f+18gzaTfrukGrq6ueg0lmH4nqVnA2IPG0AEH3jKEk2GRJCUhDoqpoiw3PHLBA==",
  "_location": "/tinyqueue",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "tinyqueue",
    "fetchSpec": "latest",
    "name": "tinyqueue",
    "raw": "tinyqueue",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/geojson-path-finder"
  ],
  "_resolved": "https://registry.npmjs.org/tinyqueue/-/tinyqueue-2.0.3.tgz",
  "_shasum": "64d8492ebf39e7801d7bd34062e29b45b2035f08",
  "_shrinkwrap": null,
  "_spec": "tinyqueue",
  "_where": "C:\\Users\\Sean\\Desktop\\foxhole-router\\Demo",
  "author": "",
  "bugs": {
    "url": "https://github.com/mourner/tinyqueue/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "The smallest and simplest JavaScript priority queue",
  "devDependencies": {
    "eslint": "^5.16.0",
    "eslint-config-mourner": "^3.0.0",
    "esm": "^3.2.25",
    "rollup": "^1.15.4",
    "rollup-plugin-buble": "^0.19.6",
    "rollup-plugin-terser": "^5.0.0",
    "tape": "^4.10.2"
  },
  "eslintConfig": {
    "extends": "mourner"
  },
  "files": [
    "index.d.ts",
    "index.js",
    "tinyqueue.js",
    "tinyqueue.min.js"
  ],
  "homepage": "https://github.com/mourner/tinyqueue",
  "jsdelivr": "tinyqueue.min.js",
  "keywords": [
    "binary heap",
    "data structures",
    "priority",
    "queue"
  ],
  "license": "ISC",
  "main": "tinyqueue.js",
  "module": "index.js",
  "name": "tinyqueue",
  "optionalDependencies": {},
  "readme": "## tinyqueue\n\nThe smallest and simplest binary heap priority queue in JavaScript.\n\n```js\n// create an empty priority queue\nvar queue = new TinyQueue();\n\n// add some items\nqueue.push(7);\nqueue.push(5);\nqueue.push(10);\n\n// remove the top item\nvar top = queue.pop(); // returns 5\n\n// return the top item (without removal)\ntop = queue.peek(); // returns 7\n\n// get queue length\nqueue.length; // returns 2\n\n// create a priority queue from an existing array (modifies the array)\nqueue = new TinyQueue([7, 5, 10]);\n\n// pass a custom item comparator as a second argument\nqueue = new TinyQueue([{value: 5}, {value: 7}], function (a, b) {\n\treturn a.value - b.value;\n});\n\n// turn a queue into a sorted array\nvar array = [];\nwhile (queue.length) array.push(queue.pop());\n```\n\nFor a faster number-based queue, see [flatqueue](https://github.com/mourner/flatqueue).\n\n### Install\n\nInstall using NPM (`npm install tinyqueue`) or Yarn (`yarn add tinyqueue`), then:\n\n```js\n// import as an ES module\nimport TinyQueue from 'tinyqueue';\n\n// or require in Node / Browserify\nconst TinyQueue = require('tinyqueue');\n```\n\nOr use a browser build directly:\n\n```html\n<script src=\"https://unpkg.com/tinyqueue@2.0.0/tinyqueue.min.js\"></script>\n```\n\n### Thanks\n\nInspired by [js-priority-queue](https://github.com/adamhooper/js-priority-queue)\nby [Adam Hooper](https://github.com/adamhooper).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mourner/tinyqueue.git"
  },
  "scripts": {
    "bench": "node -r esm bench.js",
    "build": "rollup -c",
    "lint": "eslint index.js test.js bench.js rollup.config.js",
    "prepublishOnly": "npm test",
    "pretest": "npm run lint",
    "test": "tape -r esm test.js",
    "watch": "rollup -cw"
  },
  "types": "index.d.ts",
  "unpkg": "tinyqueue.min.js",
  "version": "2.0.3"
}
